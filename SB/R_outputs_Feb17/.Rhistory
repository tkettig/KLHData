t
# Save the table
write.table(t, file = "maikai.txt", sep = ",", quote = FALSE, row.names = F)
data <- JM
## Run the plotting prep script
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("plotting_preparation.R")
## Set directory for plots and tables to be saved into that matches the speaker selected
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/JM/R_outputs")
#### LAILA, MAIKAI, KAIK- ####
ai <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ai")
ei <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ei")
laila <- data %>%
filter(word == "laila") %>%
filter(vowel == "ai") %>%
arrange(time)
laila$vowel <- "laila"
laila_means <- get_vowel_primary_secondary(laila,"laila")
maikai <- data %>%
filter(maikai==1) %>%
filter(vowel=="ai") %>%
arrange(time)
maikai$vowel <- "maikai"
maikai_means <- get_vowel_primary_secondary(maikai,"maikai")
kaika <- data %>%
filter(kaika == 1) %>%
filter(vowel == "ai") %>%
arrange(time)
kaika$vowel <- "kaik-"
kaika_means <- get_vowel_primary_secondary(kaika,"kaik-")
means <- rbind(ai, ei, laila_means, maikai_means,kaika_means)
my_colors <- c("#000000", "#999999", "#E69F00", "#56B4E9", "#009E73") # 5
traj_means(means, "Speaker JM: Selected words compared to /ei/ and /ai/, means")
# Save the plot
ggsave("laila_maikai_kaika_means.png", height = 8, width = 8, units = "in")
t <- rbind(maikai,laila,kaika) %>%
ungroup() %>%
select(word,filename) %>%
distinct() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "laila_maikai_kaika.txt", sep = ",", quote = FALSE, row.names = F)
# means and tokens together
ggplot() +
geom_path(data = laila, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = maikai, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = kaika, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = means, aes(f2, f1, color=vowel), arrow = arrow(), size = 1, alpha = 1)+
scale_color_manual(values=my_colors) +
labs(title = "Speaker JM: Selected word tokens and means compared to /ei/ and /ai/ means", x = "F2", y = "F1") +
theme_classic() +
theme(legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_y_reverse()+
scale_x_reverse()
# Save the plot
ggsave("laila_maikai_kaika.png", height = 8, width = 8, units = "in")
##### AOLE TYPE WORDS #####
oa_comparison_no_oa <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "o") # already excludes kinney type words
oa_comparison_just_oa <- monophthongs %>%
filter(vowel == "oa" )
oa_comparison_means <- mono_primary_secondary_means %>%
filter(vowel == "a" | vowel == "o")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
scale_color_manual(values=my_colors) +
labs(title = "Speaker JM: Selected word tokens compared with /o/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole.png", height = 8, width = 8, units = "in")
t <- oa_comparison_just_oa %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "aole.txt", sep = ",", quote = FALSE, row.names = F)
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = next_word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker JM: Selected word tokens compared with /o/ and /a/ means, labelled by following word", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole_following_word.png", height = 8, width = 8, units = "in")
##### MAIKAI #####
ea_comparison_nomaikai  <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "e")
ea_comparison_maikai <- monophthongs %>%
filter(maikai==1) %>%
filter(vowel=="a")
ea_comparison_maikai$vowel <- "maikai"
ea_comparison_means <- mono_primary_secondary_means %>%
filter(vowel== "a" | vowel == "e")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = ea_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = ea_comparison_nomaikai, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = ea_comparison_maikai, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker JM: MaikaÊ»i-type word tokens, compared with /e/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("maikai.png", height = 8, width = 8, units = "in")
t <- ea_comparison_maikai %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "maikai.txt", sep = ",", quote = FALSE, row.names = F)
data <- LV
## Run the plotting prep script
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("plotting_preparation.R")
## Set directory for plots and tables to be saved into that matches the speaker selected
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/R_outputs")
#### LAILA, MAIKAI, KAIK- ####
ai <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ai")
ei <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ei")
laila <- data %>%
filter(word == "laila") %>%
filter(vowel == "ai") %>%
arrange(time)
laila$vowel <- "laila"
laila_means <- get_vowel_primary_secondary(laila,"laila")
maikai <- data %>%
filter(maikai==1) %>%
filter(vowel=="ai") %>%
arrange(time)
maikai$vowel <- "maikai"
maikai_means <- get_vowel_primary_secondary(maikai,"maikai")
### use this code instead if no kaik- words
kaika <- data %>%
filter(kaika == 1) %>%
filter(vowel == "ai") %>%
arrange(time)
kaika$vowel <- "kaik-"
kaika_means <- get_vowel_primary_secondary(kaika,"kaik-")
means <- rbind(ai, ei, laila_means, maikai_means,kaika_means)
my_colors <- c("#000000", "#999999", "#E69F00", "#56B4E9", "#009E73") # 5
traj_means(means, "Speaker LV: Selected words compared to /ei/ and /ai/, means")
# Save the plot
ggsave("laila_maikai_kaika_means.png", height = 8, width = 8, units = "in")
t <- rbind(maikai,laila,kaika) %>%
ungroup() %>%
select(word,filename) %>%
distinct() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "laila_maikai_kaika.txt", sep = ",", quote = FALSE, row.names = F)
# means and tokens together
ggplot() +
geom_path(data = laila, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = maikai, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = kaika, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = means, aes(f2, f1, color=vowel), arrow = arrow(), size = 1, alpha = 1)+
scale_color_manual(values=my_colors) +
labs(title = "Speaker LV: Selected word tokens and means compared to /ei/ and /ai/ means", x = "F2", y = "F1") +
theme_classic() +
theme(legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_y_reverse()+
scale_x_reverse()
# Save the plot
ggsave("laila_maikai_kaika.png", height = 8, width = 8, units = "in")
##### AOLE TYPE WORDS #####
oa_comparison_no_oa <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "o") # already excludes kinney type words
oa_comparison_just_oa <- monophthongs %>%
filter(vowel == "oa" )
oa_comparison_means <- mono_primary_secondary_means %>%
filter(vowel == "a" | vowel == "o")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
scale_color_manual(values=my_colors) +
labs(title = "Speaker LV: Selected word tokens compared with /o/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole.png", height = 8, width = 8, units = "in")
t <- oa_comparison_just_oa %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "aole.txt", sep = ",", quote = FALSE, row.names = F)
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = next_word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker LV: Selected word tokens compared with /o/ and /a/ means, labelled by following word", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole_following_word.png", height = 8, width = 8, units = "in")
##### MAIKAI #####
ea_comparison_nomaikai  <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "e")
ea_comparison_maikai <- monophthongs %>%
filter(maikai==1) %>%
filter(vowel=="a")
ea_comparison_maikai$vowel <- "maikai"
ea_comparison_means <- mono_primary_secondary_means %>%
filter(vowel== "a" | vowel == "e")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = ea_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = ea_comparison_nomaikai, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = ea_comparison_maikai, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker LV: MaikaÊ»i-type word tokens, compared with /e/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("maikai.png", height = 8, width = 8, units = "in")
t <- ea_comparison_maikai %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "maikai.txt", sep = ",", quote = FALSE, row.names = F)
data <- RM
## Run the plotting prep script
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("plotting_preparation.R")
## Set directory for plots and tables to be saved into that matches the speaker selected
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/RM/R_outputs")
#### LAILA, MAIKAI, KAIK- ####
ai <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ai")
ei <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ei")
laila <- data %>%
filter(word == "laila") %>%
filter(vowel == "ai") %>%
arrange(time)
laila$vowel <- "laila"
laila_means <- get_vowel_primary_secondary(laila,"laila")
maikai <- data %>%
filter(maikai==1) %>%
filter(vowel=="ai") %>%
arrange(time)
maikai$vowel <- "maikai"
maikai_means <- get_vowel_primary_secondary(maikai,"maikai")
### use this code instead if no kaik- words
#
# means <- rbind(ai, ei, laila_means, maikai_means)
# my_colors <- c("#000000", "#999999", "#56B4E9", "#009E73") # 4
kaika <- data %>%
filter(kaika == 1) %>%
filter(vowel == "ai") %>%
arrange(time)
kaika$vowel <- "kaik-"
kaika_means <- get_vowel_primary_secondary(kaika,"kaik-")
means <- rbind(ai, ei, laila_means, maikai_means)
my_colors <- c("#000000", "#999999", "#56B4E9", "#009E73") # 4
traj_means(means, "Speaker RM: Selected words compared to /ei/ and /ai/, means")
# Save the plot
ggsave("laila_maikai_kaika_means.png", height = 8, width = 8, units = "in")
t <- rbind(maikai,laila,kaika) %>%
ungroup() %>%
select(word,filename) %>%
distinct() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "laila_maikai_kaika.txt", sep = ",", quote = FALSE, row.names = F)
# means and tokens together
ggplot() +
geom_path(data = laila, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = maikai, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = kaika, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = means, aes(f2, f1, color=vowel), arrow = arrow(), size = 1, alpha = 1)+
scale_color_manual(values=my_colors) +
labs(title = "Speaker RM: Selected word tokens and means compared to /ei/ and /ai/ means", x = "F2", y = "F1") +
theme_classic() +
theme(legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_y_reverse()+
scale_x_reverse()
# Save the plot
ggsave("laila_maikai_kaika.png", height = 8, width = 8, units = "in")
##### AOLE TYPE WORDS #####
oa_comparison_no_oa <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "o") # already excludes kinney type words
oa_comparison_just_oa <- monophthongs %>%
filter(vowel == "oa" )
oa_comparison_means <- mono_primary_secondary_means %>%
filter(vowel == "a" | vowel == "o")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
scale_color_manual(values=my_colors) +
labs(title = "Speaker RM: Selected word tokens compared with /o/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole.png", height = 8, width = 8, units = "in")
t <- oa_comparison_just_oa %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "aole.txt", sep = ",", quote = FALSE, row.names = F)
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = next_word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker RM: Selected word tokens compared with /o/ and /a/ means, labelled by following word", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole_following_word.png", height = 8, width = 8, units = "in")
##### MAIKAI #####
ea_comparison_nomaikai  <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "e")
ea_comparison_maikai <- monophthongs %>%
filter(maikai==1) %>%
filter(vowel=="a")
ea_comparison_maikai$vowel <- "maikai"
ea_comparison_means <- mono_primary_secondary_means %>%
filter(vowel== "a" | vowel == "e")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = ea_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = ea_comparison_nomaikai, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = ea_comparison_maikai, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker RM: MaikaÊ»i-type word tokens, compared with /e/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("maikai.png", height = 8, width = 8, units = "in")
t <- ea_comparison_maikai %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "maikai.txt", sep = ",", quote = FALSE, row.names = F)
data <- SB
## Run the plotting prep script
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("plotting_preparation.R")
## Set directory for plots and tables to be saved into that matches the speaker selected
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/SB/R_outputs")
#### LAILA, MAIKAI, KAIK- ####
ai <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ai")
ei <- data %>%
filter(previous_sound %!in% list_of_vowels | next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
get_vowel_primary_secondary("ei")
laila <- data %>%
filter(word == "laila") %>%
filter(vowel == "ai") %>%
arrange(time)
laila$vowel <- "laila"
laila_means <- get_vowel_primary_secondary(laila,"laila")
maikai <- data %>%
filter(maikai==1) %>%
filter(vowel=="ai") %>%
arrange(time)
maikai$vowel <- "maikai"
maikai_means <- get_vowel_primary_secondary(maikai,"maikai")
kaika <- data %>%
filter(kaika == 1) %>%
filter(vowel == "ai") %>%
arrange(time)
kaika$vowel <- "kaik-"
kaika_means <- get_vowel_primary_secondary(kaika,"kaik-")
means <- rbind(ai, ei, laila_means, maikai_means,kaika_means)
my_colors <- c("#000000", "#999999", "#E69F00", "#56B4E9", "#009E73") # 5
traj_means(means, "Speaker SB: Selected words compared to /ei/ and /ai/, means")
# Save the plot
ggsave("laila_maikai_kaika_means.png", height = 8, width = 8, units = "in")
t <- rbind(maikai,laila,kaika) %>%
ungroup() %>%
select(word,filename) %>%
distinct() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "laila_maikai_kaika.txt", sep = ",", quote = FALSE, row.names = F)
# means and tokens together
ggplot() +
geom_path(data = laila, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = maikai, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = kaika, aes(f2, f1, group=filename, color=vowel), arrow = arrow(), size=0.2, alpha=0.8)+
geom_path(data = means, aes(f2, f1, color=vowel), arrow = arrow(), size = 1, alpha = 1)+
scale_color_manual(values=my_colors) +
labs(title = "Speaker SB: Selected word tokens and means compared to /ei/ and /ai/ means", x = "F2", y = "F1") +
theme_classic() +
theme(legend.title=element_blank(), plot.title = element_text(hjust = 0.5)) +
scale_y_reverse()+
scale_x_reverse()
# Save the plot
ggsave("laila_maikai_kaika.png", height = 8, width = 8, units = "in")
##### AOLE TYPE WORDS #####
oa_comparison_no_oa <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "o") # already excludes kinney type words
oa_comparison_just_oa <- monophthongs %>%
filter(vowel == "oa" )
oa_comparison_means <- mono_primary_secondary_means %>%
filter(vowel == "a" | vowel == "o")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
scale_color_manual(values=my_colors) +
labs(title = "Speaker SB: Selected word tokens compared with /o/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole.png", height = 8, width = 8, units = "in")
t <- oa_comparison_just_oa %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "aole.txt", sep = ",", quote = FALSE, row.names = F)
ggplot() +
geom_text(data = oa_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = oa_comparison_no_oa, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = oa_comparison_just_oa, aes(x = f2_inf, y= f1_inf, color=vowel, label = next_word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker SB: Selected word tokens compared with /o/ and /a/ means, labelled by following word", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("aole_following_word.png", height = 8, width = 8, units = "in")
##### MAIKAI #####
ea_comparison_nomaikai  <- mono_primary_secondary %>%
filter(vowel == "a" | vowel == "e")
ea_comparison_maikai <- monophthongs %>%
filter(maikai==1) %>%
filter(vowel=="a")
ea_comparison_maikai$vowel <- "maikai"
ea_comparison_means <- mono_primary_secondary_means %>%
filter(vowel== "a" | vowel == "e")
my_colors <- c("#E69F00", "#56B4E9", "#000000") # 3
ggplot() +
geom_text(data = ea_comparison_means, aes(x = mean_f2_inf, y = mean_f1_inf, color = vowel, label = vowel)) +
stat_ellipse(data = ea_comparison_nomaikai, aes(x = f2_inf, y = f1_inf, color = vowel), level = 0.67) +
scale_x_reverse() + scale_y_reverse() +
scale_color_manual(values=my_colors) +
geom_text(data = ea_comparison_maikai, aes(x = f2_inf, y= f1_inf, color=vowel, label = word), size=4, alpha=1) +
theme_classic() +
labs(title = "Speaker SB: MaikaÊ»i-type word tokens, compared with /e/ and /a/ means", x = "F2", y = "F1") +
theme(legend.position = "", plot.title = element_text(hjust = 0.5))
# Save the plot
ggsave("maikai.png", height = 8, width = 8, units = "in")
t <- ea_comparison_maikai %>%
ungroup() %>%
group_by(word) %>%
summarise(tokens = n())
t
# Save the table
write.table(t, file = "maikai.txt", sep = ",", quote = FALSE, row.names = F)
