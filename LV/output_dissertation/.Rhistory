Ca1 = 7,
Ca2 = 13,
K = `K.`)
data$Ca1 <- as.numeric(data$Ca1)
data$Na <- as.numeric(data$Na)
data2 <- data %>%
pivot_longer(cols = c(Cu:Sr),
names_to = "Element",
values_to = "ppm")
View(data2)
ggplot(data2, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
geom_point()
## Read in data
data <- read.csv("/Users/Thomas/Desktop/anar_data.csv")
## Just get the first two letters of each column name
colnames(data) <- substr(colnames(data), 1, 2)
## Rename some of the columns
data <- data %>%
rename(Index = In,
Label = La,
Ca1 = 7,
Ca2 = 13,
K = `K.`)
## Make the columns that had NAs in them numeric
data$Ca1 <- as.numeric(data$Ca1)
data$Na <- as.numeric(data$Na)
## Pivot the dataframe longer
data2 <- data %>%
pivot_longer(cols = c(Cu:Sr),
names_to = "Element",
values_to = "ppm")
data3 <- data2 %>%
filter(ppm < 200)
ggplot(data3, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
geom_point()
ggplot(data3, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
geom_point() +
theme_bw()
ggplot(data3, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
#  geom_point() +
theme_bw()
ggplot(data3, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
#  geom_point() +
theme_bw()
## Find spread of each measurement
summary(data$3)
## Find spread of each measurement
summary(data$Cu)
## Find spread of each measurement
range(data$Cu)
library(tidyverse)
## Read in data
data <- read.csv("/Users/Thomas/Desktop/anar_data.csv")
## Just get the first two letters of each column name
colnames(data) <- substr(colnames(data), 1, 2)
## Rename some of the columns
data <- data %>%
rename(Index = In,
Label = La,
Ca1 = 9,
Ca2 = 15,
K = `K.`)
## Make the columns that had NAs in them numeric
data$Ca1 <- as.numeric(data$Ca1)
data$Na <- as.numeric(data$Na)
## Find spread of each measurement
range(data$Cu)
## Read in data
data <- read.csv("/Users/Thomas/Desktop/anar_data.csv")
## Just get the first two letters of each column name
colnames(data) <- substr(colnames(data), 1, 2)
## Rename some of the columns
data <- data %>%
rename(Index = In,
Label = La,
Order = Or,
Type = Ty,
Ca1 = 9,
Ca2 = 15,
K = `K.`)
## Make the columns that had NAs in them numeric
data$Ca1 <- as.numeric(data$Ca1)
data$Na <- as.numeric(data$Na)
## Find spread of each measurement
range(data$Cu)
range(data$Zn)
## Find spread of each measurement
range(data$Cu)
range(data$Zn)
range(data$Pb)
range(data$Al)
range(data$Ca1)
summary(data$Ca1)
## Find spread of each measurement
summary(data$Cu)
summary(data$Zn)
summary(data$Pb)
summary(data$Al)
summary(data$Ca1)
summary(data$Fe)
summary(data$Ca1)
summary(data$K)
summary(data$Li)
summary(data$Mg)
summary(data$Na)
summary(data$Na)
summary(data$K)
summary(data$Ca2)
summary(data$Si)
summary(data$Sr)
# Little numbers
summary(data$Cu)
summary(data$Zn)
summary(data$Pb)
summary(data$Al)
summary(data$Fe)
summary(data$Li)
summary(data$Sr)
little <- data3 %>%
filter(Element == "Cu" |
Element == "Zn" |
Element == "Pb" |
Element == "Al" |
Element == "Fe" |
Element == "Li" |
Element == "Sr")
big <- data3 %>%
filter(Element == "Ca1" |
Element == "Mg" |
Element == "Na" |
Element == "Ca2" |
Element == "K" |
Element == "Si")
ggplot(little, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
theme_bw()
ggplot(little, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
theme_bw()
little <- data3 %>%
filter(Element == "Cu" |
Element == "Zn" |
Element == "Pb" |
Element == "Al" |
Element == "Fe" |
Element == "Li" )
big <- data3 %>%
filter(Element == "Ca1" |
Element == "Mg" |
Element == "Na" |
Element == "Ca2" |
Element == "K" |
Element == "Si"|
Element == "Sr")
ggplot(little, aes(x=Label, y=ppm, group=Element)) +
geom_line(aes(color=Element))+
theme_bw()
library(phonR)
library(lme4)
library(yarrr)
library(emmeans)
library(scales)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("calculating_exclusions.R")
midpoints <- data %>%
group_by(filename) %>%
mutate(midpoint = time) %>%
slice(which.min(abs(time - 5.1))) %>%
ungroup %>%
select(filename,midpoint)
data_midpoints <- left_join(data,midpoints, by="filename") %>%
filter(time==midpoint) %>%
rename(f1_mid = f1, f2_mid = f2, f3_mid = f3, mahal_dist_mid = mahal_dist, time_mid = time) %>%
ungroup()
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("max_min_points.R")
max_f2 <- max_f2 %>% filter(vowel=="e"|vowel=="ē"|vowel=="i"|vowel=="ī")
min_f2 <- min_f2 %>% filter(vowel=="o"|vowel=="ō"|vowel=="u"|vowel=="ū"|vowel=="oa") # putting oa with /o/ rather than /a/ because when checking the midpoint plots, it looks like this is a more accurate representation of the proper measurement. still picks up on the lowering but does not force it.
max_f1 <- max_f1 %>% filter(!(vowel=="e"|vowel=="ē"|vowel=="i"|vowel=="ī"|vowel=="o"|vowel=="ō"|vowel=="u"|vowel=="ū"|vowel=="oa")) # making maxf1 for the rest of them; will eventually only want this for a and ā, but need placeholders for diphthongs
data4 <- rbind(max_f1,max_f2,min_f2) %>%
ungroup() %>%
select(filename, time:mahal_dist)
data5 <- left_join(data_midpoints, data4, by="filename") %>%
select(-midpoint)
data5 <- data5 %>% rename(f1_inf = f1,
f2_inf = f2,
f3_inf = f3,
time_inf = time,
mahal_dist_inf = mahal_dist)
View(data5)
View(dataspread)
au <- get_vowel_primary_secondary(data2,"au")
ae <- get_vowel_primary_secondary(data2,"ae")
ai <- get_vowel_primary_secondary(data2,"ai")
library(lmerTest)
library(emmeans)
library(sjPlot)
library(cowplot)
library(directlabels)
library(yarrr)
set.seed(1234)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("mahal_overlap.R") ## functions that will be needed
source("ggplot2_trajectory_functions.R") ## functions that will be needed
source("normalize.R")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/normed/R_outputs")
data1 <- data %>% filter(previous_sound %!in% list_of_vowels, next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
filter(pronouns == 0) %>%
filter(directionals == 0)
data2 <- data %>% filter(previous_sound %!in% list_of_vowels, next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0)
au <- get_vowel_primary_secondary(data2,"au")
ae <- get_vowel_primary_secondary(data2,"ae")
ai <- get_vowel_primary_secondary(data2,"ai")
ao <- get_vowel_primary_secondary(data2,"ao")
ei <- get_vowel_primary_secondary(data2,"ei")
eu <- get_vowel_primary_secondary(data2,"eu")
ou <- get_vowel_primary_secondary(data2,"ou")
oi <- get_vowel_primary_secondary(data2,"oi")
iu <- get_vowel_primary_secondary(data2,"iu")
means <- rbind(ae,ai,ao,au,ei,eu,ou,oi,iu)
tokens <- data2 %>%
filter(vowel=="ai" |
vowel=="ae" |
vowel=="ao" |
vowel=="au" |
vowel=="eu" |
vowel=="ou" |
vowel=="oi" |
vowel=="iu" |
vowel=="ei") %>%
mutate(time2 = (time - 1)/8)
my_colors <- c("#000000",  "#CC79A7", "#56B4E9", "#0072B2", "#D55E00",  "#000000","#009E73", "#009E73", "#000000", "#CC79A7", "#000000", "#F0E442", "#0072B2", "#000000")
## add in some anchors
anchors <- mono_primary_secondary_means %>%
filter(vowel =="a"|vowel =="e"|vowel =="i"|vowel =="o"|vowel =="u")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/normed/R_outputs")
data1 <- data %>% filter(previous_sound %!in% list_of_vowels, next_sound %!in% list_of_vowels) %>%
filter(Kinney1956 == 0) %>%
filter(pronouns == 0) %>%
filter(directionals == 0)
mono$vowel.stress <- paste(mono$vowel,mono$stress, sep=".")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("mahal_overlap.R") ## functions that will be needed
source("ggplot2_trajectory_functions.R") ## functions that will be needed
source("normalize.R")
### Prepares data for plotting an modelling for overall normed data, using ANAE f1 and f2 ##
library(joeyr)
data <- normed
midpoints <- data %>%
group_by(filename) %>%
mutate(midpoint = time) %>%
slice(which.min(abs(time - 5.1))) %>%
ungroup %>%
select(filename,midpoint)
data_midpoints <- left_join(data,midpoints, by="filename") %>%
filter(time==midpoint) %>%
rename(f1_mid = f1_anae, f2_mid = f2_anae) %>%
ungroup() %>%
select(filename,f1_mid,f2_mid, midpoint)
source("max_min_points.R")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("data_preparation.R")
source("reselect_winners.R")
## This script prepares the data, using input that has been put through a Praat script to
## merge diphthongs on the phone tier before being put through FastTrack and then
## aggregated into 9 bins.
library(tidyverse)
library(reshape2)
## Gonna give myself two types of negated %in% here
`%!in%` = Negate(`%in%`)
`%notin%` <- Negate(`%in%`)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("aggregatedata.R")
source("load_speaker/AA_data.R")
source("load_speaker/DK_data.R")
source("load_speaker/HM_data.R")
source("load_speaker/IN_data.R")
source("load_speaker/JM_data.R")
source("load_speaker/LV_data.R")
source("load_speaker/RM_data.R")
source("load_speaker/SB_data.R")
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_1 <- left_join(seg_info, formants, by="filename")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
## Reading in LV data
library(fasttrackr)
formants <- aggregatedata_myself() %>%
select(-duration)
source("aggregatedata.R")
## This script prepares the data, using input that has been put through a Praat script to
## merge diphthongs on the phone tier before being put through FastTrack and then
## aggregated into 9 bins.
library(tidyverse)
library(reshape2)
## Gonna give myself two types of negated %in% here
`%!in%` = Negate(`%in%`)
`%notin%` <- Negate(`%in%`)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("aggregatedata.R")
## Reading in LV data
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_1 <- left_join(seg_info, formants, by="filename")
View(LV_1)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
View(seg_info)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_1 <- left_join(seg_info, formants, by="filename")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info1 <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
View(seg_info)
View(seg_info1)
summary(seg_info)
summary(seg_info1)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info1 <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
View(seg_info)
## Reading in LV data
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- read.csv("processed_data/aggregated_data.csv", header=TRUE, stringsAsFactors=FALSE) %>% select(-duration,-label,-number,-color,-group)
formants <- aggregatedata_myself() %>%
select(-duration)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("aggregatedata.R")
## This script prepares the data, using input that has been put through a Praat script to
## merge diphthongs on the phone tier before being put through FastTrack and then
## aggregated into 9 bins.
library(tidyverse)
library(reshape2)
## Gonna give myself two types of negated %in% here
`%!in%` = Negate(`%in%`)
`%notin%` <- Negate(`%in%`)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("aggregatedata.R")
## Reading in LV data
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_1 <- left_join(seg_info, formants, by="filename")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
formants <- read.csv("processed_data/aggregated_data.csv", header=TRUE, stringsAsFactors=FALSE) %>% select(-duration,-label,-number,-color,-group)
formants <- aggregatedata_myself() %>%
select(-duration)
## Reading in LV data
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
# formants <- read.csv("processed_data/aggregated_data.csv", header=TRUE, stringsAsFactors=FALSE) %>% select(-duration,-label,-number,-color,-group)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_1 <- left_join(seg_info, formants, by="filename")
View(LV_1)
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/AA/output")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
AA <- left_join(seg_info, formants, by="filename")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
View(AA)
formants <- read.csv("processed_data/aggregated_data.csv", header=TRUE, stringsAsFactors=FALSE) %>% select(-duration,-label,-number,-color,-group)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- read.csv("processed_data/aggregated_data.csv", header=TRUE, stringsAsFactors=FALSE) %>% select(-duration,-label,-number,-color,-group)
LV_2 <- left_join(seg_info, formants, by="filename")
View(formants)
# formants <- aggregatedata_myself() %>%
#   select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_2 <- left_join(seg_info, formants, by="filename")
## Reading in LV data
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
## This script prepares the data, using input that has been put through a Praat script to
## merge diphthongs on the phone tier before being put through FastTrack and then
## aggregated into 9 bins.
library(tidyverse)
library(reshape2)
## Gonna give myself two types of negated %in% here
`%!in%` = Negate(`%in%`)
`%notin%` <- Negate(`%in%`)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/R_scripts/")
source("aggregatedata.R")
## Reading in LV data
library(tidyverse)
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_May2023")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- aggregatedata_myself() %>%
select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_1 <- left_join(seg_info, formants, by="filename")
setwd("/Users/Thomas/Documents/Hawaiian_Phonetics/Dissertation/Manaleo/LV/output_dissertation")
seg_info <- read.csv("segmentation_information.csv", header=TRUE, stringsAsFactors=FALSE) %>%
select(-inputfile) %>%
rename(filename = outputfile)
formants <- read.csv("processed_data/aggregated_data.csv", header=TRUE, stringsAsFactors=FALSE) %>% select(-duration,-label,-number,-color,-group)
# formants <- aggregatedata_myself() %>%
#   select(-duration)
names(formants)[1] <- "filename"
formants$filename <- gsub(".wav", "", formants$filename)
LV_2 <- left_join(seg_info, formants, by="filename")
LV <- LV_1
LV$f0 <- LV_2$f0
LV$intensity <- LV_2$intensity
View(LV)
View(LV_2)
View(formants)
?fasttrackr
??fasttrackr
